[General]
repeat = 5

seed-set = ${repetition}

**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

*.scheduler.maxScheduledFlows = 10000
*.scheduler.noTraffic = true

# Scalar metrics
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true
**.protocol.*.scalar-recording = true
**.protocol.protocolPacketsSent.scalar-recording = true
**.protocol.protocolBytesSent.scalar-recording = true
**.protocol.maxMemoryFootprint.scalar-recording = true
**.protocol.qosOverrides.scalar-recording = true

**.protocol.recordMemoryFootprint = false


# Metrics we don't need
**.protocol.recordQueueStates = false
**.protocol.recordConsumption = false

**.scalar-recording = false
**.vector-recording = false
**.vector-record-eventnumbers = false

[Config stcost266-lsg-1]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 1
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stcost266-lsg-10]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 10
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stcost266-lsg-25]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 25
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stcost266-lsg-50]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 50
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stcost266-lsg-75]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 75
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stcost266-lsg-100]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 100
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

## BFG

[Config stcost266-bfg-1]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 1
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-bfg-10]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 10
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-bfg-25]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 25
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-bfg-50]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 50
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-bfg-75]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 75
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-bfg-100]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 100
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

## DFG

[Config stcost266-dfg-1]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 1
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-dfg-10]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 10
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-dfg-25]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 25
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-dfg-50]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 50
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-dfg-75]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 75
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config stcost266-dfg-100]
network = protocol.simulations.networks.evaluation.COST266
**.scheduler.interval = 0.001s
**.scheduler.noTraffic = true
**.scheduler.flowsPerInterval = 100
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

