[General]
repeat = 10
seed-set = ${repetition}
num-rngs = 2
**.protocol.rng-0 = 1

**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

*.scheduler.interval = 0.01s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 10

# Scalar metrics
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true
**.protocol.*.scalar-recording = true
**.protocol.protocolPacketsSent.scalar-recording = true
**.protocol.protocolBytesSent.scalar-recording = true
**.protocol.maxMemoryFootprint.scalar-recording = true

**.protocol.recordMemoryFootprint = true

# Vector metrics
**.protocol.routingTime:vector.vector-recording = true
**.protocol.packetProcessingTime:vector.vector-recording = true
**.vector-recording-intervals = 10..15s # only measure vectors within 10-15s 


# Metrics we don't need
**.protocol.recordQueueStates = false
**.protocol.recordConsumption = false

**.scalar-recording = false
**.vector-recording = false
**.vector-record-eventnumbers = false

######################################################
################### CONFIGS ##########################
######################################################



######################################################
################### BFGREEDY #########################
######################################################
[Config bcost266-bfg]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bnsfnet-bfg]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bgermany-bfg]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bpolska-bfg]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

######################################################
################### DFGREEDY #########################
######################################################
[Config bcost266-dfg]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bnsfnet-dfg]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bgermany-dfg]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

[Config bpolska-dfg]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true

######################################################
################### LSGREEDY #########################
######################################################
[Config bcost266-lsg]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config bnsfnet-lsg]
network = networks.evaluation.NSFNET
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config bgermany-lsg]
network = networks.evaluation.Germany50
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config bpolska-lsg]
network = networks.evaluation.Polska
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

