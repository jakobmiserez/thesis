[General]
repeat = 1

seed-set = ${repetition}

**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

*.scheduler.interval = 0.01s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 10

**.lsaOptimizer.enabled = true
**.lsaOptimizer.startTime = 4s
**.protocol.optimizeLsas = true

# Scalar metrics
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true
**.protocol.*.scalar-recording = true
**.protocol.protocolPacketsSent.scalar-recording = true
**.protocol.protocolBytesSent.scalar-recording = true
**.protocol.maxMemoryFootprint.scalar-recording = true

**.protocol.recordMemoryFootprint = true

# Vector metrics
**.protocol.routingTime:vector.vector-recording = true
**.protocol.packetProcessingTime:vector.vector-recording = true
**.vector-recording-intervals = 10..15s # only measure vectors within 10-15s 


# Metrics we don't need
**.protocol.recordQueueStates = false
**.protocol.recordConsumption = false

**.scalar-recording = false
**.vector-recording = false
**.vector-record-eventnumbers = false

[Config test-ls]
network = protocol.simulations.networks.evaluation.scalability2.COST266s
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config test-df]
network = protocol.simulations.networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config test-bf]
network = protocol.simulations.networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stopo100-bfg]
network = protocol.simulations.networks.evaluation.scalability2.scale100d
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stopo100-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale100d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stopo200-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale200d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stopo300-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale300d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stopo400-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale400d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stopo500-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale300d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config stopo1000-bfg]
network = protocol.simulations.networks.evaluation.scalability2.scale1000d
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stopo1000-dfg]
network = protocol.simulations.networks.evaluation.scalability2.scale1000d
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config stopo1000-lsg]
network = protocol.simulations.networks.evaluation.scalability2.scale1000d
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

