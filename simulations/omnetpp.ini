[General]
#parallel-simulation = true
#parsim-communications-class="cNamedPipeCommunications"
#parsim-synchronization-class = "cNullMessageProtocol"
num-rngs = 2
**.protocol.rng-0 = 1

#*.*.partition-id = 0, 1, 2

**.protocol.routingProtocol = "probing"
**.scheduler.demandMatrixDir = "/home/jakob/omnet-workspace/protocol/simulations/networks/evaluation"

# DynSink statistics 
**.DynSink*.endToEndDelay:vector.vector-recording = true
**.DynSink*.throughput:vector.vector-recording = true
**.DynSink*.packetReceived:vector.vector-recording = true
**.DynSink*.packetReceived:count.scalar-recording = true

# FlowServerApp statistics
**.router.app[0].flowRequestsReceived.scalar-recording = true
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true

**.scalar-recording = false
**.vector-recording = false


[Config test]
network = networks.evaluation.NSFNET

[Config NSFNET]
network = networks.evaluation.NSFNET

[Config COST266]
network = networks.evaluation.COST266
*.scheduler.demandMatrixFile = "COST266.matrix"

[Config COST266-bf]
network = networks.evaluation.COST266
*.scheduler.demandMatrixFile = "COST266.matrix"
*.scheduler.interval = 0.2s
**.protocol.probingVariant = "bf"
*.scheduler.noTraffic = true

[Config COST266-bf-dbg]
network = networks.evaluation.COST266
*.scheduler.demandMatrixFile = "COST266.matrix"
*.scheduler.interval = 10s
**.protocol.probingVariant = "bf"
*.scheduler.noTraffic = true

*.Vienna.area.numApps = 1

*.Vienna.area.app[0].typename = "CriticalUdpApp"
*.Vienna.area.app[0].srcAddress = "Vienna.area"
*.Vienna.area.app[0].destAddress = "Milan.area"
*.Vienna.area.app[0].flowServerAddress = "Vienna.router"
*.Vienna.area.app[0].port = 41000
*.Vienna.area.app[0].delay = 300
*.Vienna.area.app[0].burst = 500B
*.Vienna.area.app[0].packetBurst = 3
*.Vienna.area.app[0].label = 1
*.Vienna.area.app[0].bandwidth = 10000bps
*.Vienna.area.app[0].noTraffic = true


[Config COST266-ls]
network = networks.evaluation.COST266
*.scheduler.demandMatrixFile = "COST266.matrix"
*.scheduler.interval = 0.2s
**.protocol.routingProtocol = "ls"
*.scheduler.noTraffic = true

[Config COST266-df]
network = networks.evaluation.COST266
*.scheduler.demandMatrixFile = "COST266.matrix"
*.scheduler.interval = 0.2s
**.protocol.probingVariant = "df"



