[General]
repeat = 10
seed-set = ${repetition}
#sim-time-limit = 110s
num-rngs = 2
**.protocol.rng-0 = 1

**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

*.scheduler.interval = 0.01s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 10

# FlowServerApp statistics
**.router.app[0].flowRequestsReceived.scalar-recording = true
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsOngoing.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true

**.protocol.protocolPacketsSent.scalar-recording = true
**.protocol.collisions.scalar-recording = true
**.protocol.straightFails.scalar-recording = true
**.protocol.consumption*.scalar-recording = true

**.scalar-recording = false
**.vector-recording = false

[Config Load-bf-queue-greedy]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"

[Config Load-bf-queue-honest]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "honest"

[Config Load-bf-queue-random]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "random"

[Config Load-bf-fastprune-greedy]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config Load-bf-fastprune-honest]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "honest"

[Config Load-bf-fastprune-random]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "random"

[Config Load-df-greedy]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config Load-df-honest]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "honest"

[Config Load-df-random]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "random"

[Config Load-ls-larac-10]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.1

[Config Load-ls-larac-5]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.05
**.protocol.budgetAllocator = "custom"

[Config Load-ls-larac-1]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.01

[Config Load-ls-mindelay-10]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.1

[Config Load-ls-mindelay-5]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.05

[Config Load-ls-mindelay-1]
network = networks.evaluation.COST266
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.01

