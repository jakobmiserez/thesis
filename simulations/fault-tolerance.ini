[General]
repeat = 5
seed-set = ${repetition}

*.scheduler.interval = 0.01s
*.scheduler.noTraffic = true
*.scheduler.noTrafficStop = 21.8s
*.scheduler.flowsPerInterval = 10
*.scheduler.duration= 10s
*.scheduler.packetBurst = 2

**.protocol.countPacketStatsAfter = 21.9s
**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

**.protocol.packetsLost.scalar-recording = true
**.protocol.dataLost.scalar-recording = true
**.protocol.protocolPacketsSent.scalar-recording = true
**.protocol.protocolBytesSent.scalar-recording = true
**.router.ppp[*].ppp.queue.queue[*].packetDropQueueOverflow:count.scalar-recording = true
**.vector-recording = false
**.scalar-recording= false

[Config ftcost266-lsg]
network = protocol.simulations.networks.evaluation.COST266
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-cost266.xml")
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config ftgermany-lsg]
network = protocol.simulations.networks.evaluation.Germany50
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-germany.xml")
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config ftnsfnet-lsg]
network = protocol.simulations.networks.evaluation.NSFNET
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-nsfnet.xml")
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config ftpolska-lsg]
network = protocol.simulations.networks.evaluation.Polska
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-polska.xml")
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"

[Config ftcost266-bfg]
network = protocol.simulations.networks.evaluation.COST266
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-cost266.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config ftgermany-bfg]
network = protocol.simulations.networks.evaluation.Germany50
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-germany.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config ftnsfnet-bfg]
network = protocol.simulations.networks.evaluation.NSFNET
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-nsfnet.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config ftpolska-bfg]
network = protocol.simulations.networks.evaluation.Polska
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-polska.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config ftcost266-dfg]
network = protocol.simulations.networks.evaluation.COST266
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-cost266.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config ftgermany-dfg]
network = protocol.simulations.networks.evaluation.Germany50
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-germany.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config ftnsfnet-dfg]
network = protocol.simulations.networks.evaluation.NSFNET
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-nsfnet.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config ftpolska-dfg]
network = protocol.simulations.networks.evaluation.Polska
*.scenarioManager.script = xmldoc("simulations/networks/scenarios/fail-scenario-polska.xml")
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"


