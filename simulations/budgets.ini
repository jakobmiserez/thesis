[General]
repeat = 10
seed-set = ${repetition}
#sim-time-limit = 60s
num-rngs = 2
**.protocol.rng-0 = 1

**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.protocolBurstUsage = 0B
**.protocol.protocolBwUsage = 0
**.router.numQueues = 3
**.protocol.budgetAllocator = "chameleon"

*.scheduler.interval = 1s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 1
*.scheduler.maxScheduledFlows = 2000

# FlowServerApp statistics
**.router.app[0].flowRequestsReceived.scalar-recording = true
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsOngoing.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true

#**.protocol.protocolPacketsSent.scalar-recording = true
#**.protocol.collisions.scalar-recording = true
#**.protocol.straightFails.scalar-recording = true
**.protocol.consumption*.scalar-recording = true

**.scalar-recording = false
**.vector-recording = false

#[Config Load-ls-mindelay-10]
#network = networks.evaluation.COST266
#**.protocol.routingProtocol = "ls"
#**.protocol.lsAlgorithm = "mindelay"
#**.protocol.lsConsumptionThresh = 0.1

######################################################
################### CONFIGS ##########################
######################################################



######################################################
################### BFGREEDY #########################
######################################################
[Config dbcost266-bfg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config dbcost266-bfg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config dbcost266-bfg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config dbcost266-bfg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config dbcost266-bfg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config dbcost266-bfg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config dbcost266-bfg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config dbcost266-bfg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config dbcost266-bfg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config dbcost266-bfg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config dbgermany-bfg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config dbgermany-bfg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config dbgermany-bfg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config dbgermany-bfg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config dbgermany-bfg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config dbgermany-bfg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config dbgermany-bfg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config dbgermany-bfg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config dbgermany-bfg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config dbgermany-bfg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config dbnsfnet-bfg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config dbnsfnet-bfg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config dbnsfnet-bfg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config dbnsfnet-bfg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config dbnsfnet-bfg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config dbnsfnet-bfg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config dbnsfnet-bfg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config dbnsfnet-bfg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config dbnsfnet-bfg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config dbnsfnet-bfg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config dbpolska-bfg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config dbpolska-bfg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config dbpolska-bfg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config dbpolska-bfg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config dbpolska-bfg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config dbpolska-bfg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config dbpolska-bfg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config dbpolska-bfg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config dbpolska-bfg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config dbpolska-bfg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

######################################################
################### DFGREEDY #########################
######################################################
[Config dbcost266-dfg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config dbcost266-dfg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config dbcost266-dfg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config dbcost266-dfg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config dbcost266-dfg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config dbcost266-dfg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config dbcost266-dfg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config dbcost266-dfg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config dbcost266-dfg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config dbcost266-dfg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config dbgermany-dfg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config dbgermany-dfg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config dbgermany-dfg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config dbgermany-dfg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config dbgermany-dfg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config dbgermany-dfg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config dbgermany-dfg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config dbgermany-dfg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config dbgermany-dfg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config dbgermany-dfg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config dbnsfnet-dfg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config dbnsfnet-dfg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config dbnsfnet-dfg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config dbnsfnet-dfg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config dbnsfnet-dfg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config dbnsfnet-dfg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config dbnsfnet-dfg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config dbnsfnet-dfg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config dbnsfnet-dfg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config dbnsfnet-dfg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config dbpolska-dfg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config dbpolska-dfg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config dbpolska-dfg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config dbpolska-dfg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config dbpolska-dfg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config dbpolska-dfg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config dbpolska-dfg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config dbpolska-dfg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config dbpolska-dfg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config dbpolska-dfg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"


######################################################
################### LSGREEDY #########################
######################################################
[Config dbcost266-lsg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config dbcost266-lsg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config dbcost266-lsg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config dbcost266-lsg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config dbcost266-lsg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config dbcost266-lsg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config dbcost266-lsg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config dbcost266-lsg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config dbcost266-lsg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config dbcost266-lsg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config dbgermany-lsg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config dbgermany-lsg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config dbgermany-lsg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config dbgermany-lsg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config dbgermany-lsg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config dbgermany-lsg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config dbgermany-lsg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config dbgermany-lsg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config dbgermany-lsg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config dbgermany-lsg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config dbnsfnet-lsg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config dbnsfnet-lsg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config dbnsfnet-lsg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config dbnsfnet-lsg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config dbnsfnet-lsg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config dbnsfnet-lsg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config dbnsfnet-lsg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config dbnsfnet-lsg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config dbnsfnet-lsg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config dbnsfnet-lsg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config dbpolska-lsg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config dbpolska-lsg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config dbpolska-lsg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config dbpolska-lsg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config dbpolska-lsg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config dbpolska-lsg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config dbpolska-lsg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config dbpolska-lsg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config dbpolska-lsg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config dbpolska-lsg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"



#[Config test]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "lin_100_200_100"
#
#[Config Budgets-ls-linear-100-200-100]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "lin_100_200_100"
#
#[Config Budgets-ls-linear-100-400-200]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "lin_100_400_200"
#
#[Config Budgets-ls-exp-100-100-2]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "exp_100_100_2"
#
#[Config Budgets-ls-const-100-500]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "const_100_500"
#
#[Config Budgets-ls-const-500-0]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "const_500_0"
#
#[Config Budgets-ls-custom]
#network = networks.evaluation.COST266
#**.protocol.budgetAllocator = "custom"
#
#
#
#
##[Config Load-ls-mindelay-1]
##network = networks.evaluation.COST266
##**.protocol.routingProtocol = "ls"
##**.protocol.lsAlgorithm = "mindelay"
##**.protocol.lsConsumptionThresh = 0.01