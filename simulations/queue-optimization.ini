[General]
repeat = 20
seed-set = ${repetition}

num-rngs = 2
**.protocol.rng-0 = 1

**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

**.protocol.lsAlgorithm = "mindelay"
**.protocol.protocolBurstUsage = 0B
**.protocol.protocolBwUsage = 0
**.router.numQueues = 3

*.scheduler.interval = 1s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 1
*.scheduler.maxScheduledFlows = 2000

# FlowServerApp statistics
**.router.app[0].flowRequestsReceived.scalar-recording = true
**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsOngoing.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true

**.protocol.consumption*.scalar-recording = true

**.scalar-recording = false
**.vector-recording = false


######################################################
################### CONFIGS ##########################
######################################################



######################################################
################### BFGREEDY #########################
######################################################
[Config qocost266-bfg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config qocost266-bfg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config qocost266-bfg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config qocost266-bfg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config qocost266-bfg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config qocost266-bfg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config qocost266-bfg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config qocost266-bfg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config qocost266-bfg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config qocost266-bfg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config qogermany-bfg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config qogermany-bfg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config qogermany-bfg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config qogermany-bfg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config qogermany-bfg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config qogermany-bfg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config qogermany-bfg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config qogermany-bfg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config qogermany-bfg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config qogermany-bfg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config qonsfnet-bfg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config qonsfnet-bfg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config qonsfnet-bfg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config qonsfnet-bfg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config qonsfnet-bfg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config qonsfnet-bfg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config qonsfnet-bfg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config qonsfnet-bfg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config qonsfnet-bfg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config qonsfnet-bfg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

[Config qopolska-bfg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "custom"

[Config qopolska-bfg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "chameleon"

[Config qopolska-bfg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "const1"

[Config qopolska-bfg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple3"

[Config qopolska-bfg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "exp"

[Config qopolska-bfg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "gap"

[Config qopolska-bfg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing1"

[Config qopolska-bfg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "increasing2"

[Config qopolska-bfg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple1"

[Config qopolska-bfg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.probingFastPrune = true
**.protocol.budgetAllocator = "simple2"

######################################################
################### DFGREEDY #########################
######################################################
[Config qocost266-dfg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config qocost266-dfg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config qocost266-dfg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config qocost266-dfg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config qocost266-dfg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config qocost266-dfg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config qocost266-dfg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config qocost266-dfg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config qocost266-dfg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config qocost266-dfg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config qogermany-dfg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config qogermany-dfg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config qogermany-dfg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config qogermany-dfg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config qogermany-dfg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config qogermany-dfg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config qogermany-dfg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config qogermany-dfg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config qogermany-dfg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config qogermany-dfg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config qonsfnet-dfg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config qonsfnet-dfg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config qonsfnet-dfg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config qonsfnet-dfg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config qonsfnet-dfg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config qonsfnet-dfg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config qonsfnet-dfg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config qonsfnet-dfg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config qonsfnet-dfg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config qonsfnet-dfg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"

[Config qopolska-dfg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "custom"

[Config qopolska-dfg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "chameleon"

[Config qopolska-dfg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "const1"

[Config qopolska-dfg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple3"

[Config qopolska-dfg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "exp"

[Config qopolska-dfg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "gap"

[Config qopolska-dfg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing1"

[Config qopolska-dfg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "increasing2"

[Config qopolska-dfg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple1"

[Config qopolska-dfg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "simple2"


######################################################
################### LSGREEDY #########################
######################################################
[Config qocost266-lsg-base]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config qocost266-lsg-chameleon]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config qocost266-lsg-const1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config qocost266-lsg-simple3]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config qocost266-lsg-exp]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config qocost266-lsg-gap]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config qocost266-lsg-inc1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config qocost266-lsg-inc2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config qocost266-lsg-simple1]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config qocost266-lsg-simple2]
network = networks.evaluation.COST266

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config qogermany-lsg-base]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config qogermany-lsg-chameleon]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config qogermany-lsg-const1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config qogermany-lsg-simple3]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config qogermany-lsg-exp]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config qogermany-lsg-gap]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config qogermany-lsg-inc1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config qogermany-lsg-inc2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config qogermany-lsg-simple1]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config qogermany-lsg-simple2]
network = networks.evaluation.Germany50

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config qonsfnet-lsg-base]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config qonsfnet-lsg-chameleon]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config qonsfnet-lsg-const1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config qonsfnet-lsg-simple3]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config qonsfnet-lsg-exp]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config qonsfnet-lsg-gap]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config qonsfnet-lsg-inc1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config qonsfnet-lsg-inc2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config qonsfnet-lsg-simple1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config qonsfnet-lsg-simple2]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

[Config qopolska-lsg-base]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "custom"

[Config qopolska-lsg-chameleon]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "chameleon"

[Config qopolska-lsg-const1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "const1"

[Config qopolska-lsg-simple3]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple3"

[Config qopolska-lsg-exp]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "exp"

[Config qopolska-lsg-gap]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "gap"

[Config qopolska-lsg-inc1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing1"

[Config qopolska-lsg-inc2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "increasing2"

[Config qopolska-lsg-simple1]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple1"

[Config qopolska-lsg-simple2]
network = networks.evaluation.Polska

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "simple2"

### OPTIMIZED BUDGETS NSFNET

[Config qonsfnet-lsg-qopt1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "ls"
**.protocol.budgetAllocator = "qopt1"

[Config qonsfnet-dfg-qopt1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "qopt1"

[Config qonsfnet-bfg-qopt1]
network = networks.evaluation.NSFNET

**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bNf"
**.protocol.probingQueueHeuristic = "greedy"
**.protocol.budgetAllocator = "qopt1"
