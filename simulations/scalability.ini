[General]
repeat = 1
seed-set = ${repetition}
num-rngs = 2
**.protocol.rng-0 = 1

**.protocol.budgetAllocator = "custom"
**.protocol.lsUpdateStrategy = "hybrid"
**.protocol.lsUpdateInterval = 5.0s

*.scheduler.interval = 0.01s
*.scheduler.noTraffic = true
*.scheduler.flowsPerInterval = 10

**.router.app[0].flowRequestsAccepted.scalar-recording = true
**.router.app[0].flowRequestsFailed.scalar-recording = true
**.protocol.protocolPacketsSent.scalar-recording = true

**.scalar-recording = false
**.vector-recording = false

[Config S100-bf-fastprune-greedy]
network = networks.evaluation.scalability.Gen100
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config S500-bf-fastprune-greedy]
network = networks.evaluation.scalability.Gen500
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config S1000-bf-fastprune-greedy]
network = networks.evaluation.scalability.Gen1000
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config S2500-bf-fastprune-greedy]
network = networks.evaluation.scalability.Gen2500
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "bf"
**.protocol.probingFastPrune = true
**.protocol.probingQueueHeuristic = "greedy"

[Config S100-df-greedy]
network = networks.evaluation.scalability.Gen100
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config S500-df-greedy]
network = networks.evaluation.scalability.Gen500
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config S1000-df-greedy]
network = networks.evaluation.scalability.Gen1000
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config S2500-df-greedy]
network = networks.evaluation.scalability.Gen2500
**.protocol.routingProtocol = "probing"
**.protocol.probingVariant = "df"
**.protocol.probingQueueHeuristic = "greedy"

[Config S100-ls-larac-5]
network = networks.evaluation.scalability.Gen100
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.05

[Config S500-ls-larac-5]
network = networks.evaluation.scalability.Gen500
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.05

[Config S1000-ls-larac-5]
network = networks.evaluation.scalability.Gen1000
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.05

[Config S2500-ls-larac-5]
network = networks.evaluation.scalability.Gen2500
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "larac"
**.protocol.lsConsumptionThresh = 0.05

[Config S100-ls-mindelay-5]
network = networks.evaluation.scalability.Gen100
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.05

[Config S500-ls-mindelay-5]
network = networks.evaluation.scalability.Gen500
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.05

[Config S1000-ls-mindelay-5]
network = networks.evaluation.scalability.Gen1000
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.05

[Config S2500-ls-mindelay-5]
network = networks.evaluation.scalability.Gen2500
**.protocol.routingProtocol = "ls"
**.protocol.lsAlgorithm = "mindelay"
**.protocol.lsConsumptionThresh = 0.05
