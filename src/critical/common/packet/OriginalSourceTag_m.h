//
// Generated file, do not edit! Created by nedtool 5.6 from critical/common/packet/OriginalSourceTag.msg.
//

#ifndef __CRITICAL_ORIGINALSOURCETAG_M_H
#define __CRITICAL_ORIGINALSOURCETAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace critical {

class OriginalSourceTag;
} // namespace critical

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

#include "inet/networklayer/contract/ipv6/Ipv6Address_m.h" // import inet.networklayer.contract.ipv6.Ipv6Address


namespace critical {

/**
 * Class generated from <tt>critical/common/packet/OriginalSourceTag.msg:8</tt> by nedtool.
 * <pre>
 * class OriginalSourceTag extends inet::TagBase
 * {
 *     inet::Ipv6Address originalSourceAddress;
 *     int originalInterface = -1;
 * }
 * </pre>
 */
class OriginalSourceTag : public ::inet::TagBase
{
  protected:
    inet::Ipv6Address originalSourceAddress;
    int originalInterface = -1;

  private:
    void copy(const OriginalSourceTag& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OriginalSourceTag&);

  public:
    OriginalSourceTag();
    OriginalSourceTag(const OriginalSourceTag& other);
    virtual ~OriginalSourceTag();
    OriginalSourceTag& operator=(const OriginalSourceTag& other);
    virtual OriginalSourceTag *dup() const override {return new OriginalSourceTag(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const inet::Ipv6Address& getOriginalSourceAddress() const;
    virtual inet::Ipv6Address& getOriginalSourceAddressForUpdate() { return const_cast<inet::Ipv6Address&>(const_cast<OriginalSourceTag*>(this)->getOriginalSourceAddress());}
    virtual void setOriginalSourceAddress(const inet::Ipv6Address& originalSourceAddress);
    virtual int getOriginalInterface() const;
    virtual void setOriginalInterface(int originalInterface);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OriginalSourceTag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OriginalSourceTag& obj) {obj.parsimUnpack(b);}

} // namespace critical

#endif // ifndef __CRITICAL_ORIGINALSOURCETAG_M_H

